[{"categories":["Authontication"],"contents":" Session-based Authontication 利用Session來進行驗證的機制 ","permalink":"https://Menglin31.github.io/blog/authontication/","tags":["Authontication","note"],"title":"Session-based Authontication v.s. Token-based Authontication"},{"categories":["tips"],"contents":" 官方Demo https://www.youtube.com/watch?v=I2jOuLU4o8E\n作用機制 usb ip protocol\nsystem environment\nwin11, wsl version 2 setup\ninstall usbip tools in WSL sudo apt install linux-tools-generic hwdata\rsudo update-alternatives --install /usr/local/bin/usbip usbip /usr/lib/linux-tools/*-generic/usbip 20 install usbip in windows 11 winget install --interactive --exact dorssel.usbipd-win reboot windows open powershell in administrator mode\nlist all of the USB devices connected to Windows usbipd wsl list select the bus ID of the device you’d like to attach usbipd wsl attach --busid \u0026lt;busid\u0026gt; select the bus ID of the device you’d like to detach usbipd wsl detach --busid \u0026lt;busid\u0026gt; in WSL\nlist the attached USB devices lsusb disk in win11 目前官方無提供讀ext4解法\n可能有用的解法(待嘗試) -\u0026gt; 可mount usb https://www.youtube.com/watch?v=iyBfQXmyH4o WSL2中會用到的指令如下 VERSION=5.10.60.1 sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y \u0026amp;\u0026amp; sudo apt install -y build-essential flex bison libgtk2.0-dev libelf-dev libncurses-dev autoconf libudev-dev libtool zip unzip v4l-utils libssl-dev python3-pip cmake git iputils-ping net-tools dwarves sudo mkdir /usr/src cd /usr/src sudo git clone -b linux-msft-wsl-${VERSION} https://github.com/microsoft/WSL2-Linux-Kernel.git ${VERSION}-microsoft-standard \u0026amp;\u0026amp; cd ${VERSION}-microsoft-standard sudo cp /proc/config.gz config.gz sudo gunzip config.gz sudo mv config .config sudo make menuconfig 這邊要把 menuconfig -\u0026gt; Device Drivers \u0026ndash;\u0026gt; USB support \u0026mdash;\u0026gt; USB Mass Storage support 按y選取 按esc+esc儲存並跳出 sudo make -j$(nproc) sudo make modules_install -j$(nproc) sudo make install -j$(nproc) sudo cp -rf vmlinux /mnt/c/Sources/ exit 接著再win11底下 wsl --shutdown 確認/mnt/c/Sources/中有無vmlinux 這個檔案 C:\\Users\\\u0026lt;username\u0026gt; (需替換成自己使用者名字)在這個路徑下新建一個檔案 .wslconfig .wslconfig內容為vmlinux的路徑 kernel=C:\\Sources\\vmlinux mount/unmount usb 指令(要先attach usb到wsl) win11終端機內輸入wsl lsblk sudo mkdir /mnt/part1 sudo mount /dev/sdd1 /mnt/part1 即可在/mnt/part資料夾中看到usb內的資料 unmount則 sudo unmount /dev/sdd1 Reference\nhttps://learn.microsoft.com/en-us/windows/wsl/connect-usb https://gitlab.com/alelec/wsl-usb-gui ","permalink":"https://Menglin31.github.io/blog/wsl_usb/","tags":["WSL","USB","tips"],"title":"Attach USB Device to WSL2"},{"categories":["軟體設計"],"contents":" SOLID設計原則 SRP: 單一職責原則 軟體產品的架構與開發團隊的組織會相互影響。 每個軟體模組只有一個理由需要改變。\nOCP: 開放\u0026ndash;封閉原則 要使軟體系統易於改變，須將其設計成允許透過增加新程式碼來更改行為（而非更改現有程式）。\nLSP: Liskov替換原則 建置軟體系統必須來自可互換的部分，這些部分必須遵守允許這些部分相互替換的契約。\nISP: 介面隔離原則 軟體設計師應該避免依賴於不使用的東西。\nDIP: 依賴反向原則 實作策略的高層程式碼不應該依賴於實作細節的低層級程式碼 → 細節應該依賴於策略\nSRP(Single Responsibility Principle)，單一職責原則 一個模組應該只對唯一的一個角色負責 狀況一： 假設工程師正在為應用程式建立一個class進行用戶身份驗證。 該class可能具有以下職責： 驗證用戶的憑證（例如用戶名和密碼）。 從資料庫中查詢用戶資料。 為用戶生成身份驗證的token。 但是，根據單一職責原則，一個class應該只有一個原因需要進行更改。 換句話說，一個class只應該有一個職責。 因此，在這種情況下，最好將職責分成下列幾個單獨的class： 驗證用戶的憑證的class。 從資料庫中查詢用戶資料的class。 為用戶生成身份驗證token的class。 這將產生更容易理解和維護的代碼，因為每個class都有一個明確且具體的職責。 如果其中一個職責發生變化，只需要更新相關的class，而不是對處理所有三個職責的單個class進行更改。\n","permalink":"https://Menglin31.github.io/blog/post-1/","tags":["Code","SOLID"],"title":"SLOID設計原則"},{"categories":["版本控制"],"contents":" git branch，建立自己的Branch(ex: git branch ABC-12301) git checkout ABC-12301 git add git commit -m \u0026ldquo;commit message\u0026rdquo; git pull遠端處理的版本(ex:git pull origin 1.0.0-branch) git push 自己的分支(ex: git push origin ABC-12301) github網頁上發PR 設定reviewer ","permalink":"https://Menglin31.github.io/blog/post-2/","tags":["Code","git","version control"],"title":"Git常用指令"},{"categories":["Go Language"],"contents":"Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Emphasis Emphasis, aka italics, with asterisks or underscores.\nStrong emphasis, aka bold, with asterisks or underscores.\nCombined emphasis with asterisks and underscores.\nStrikethrough uses two tildes. Scratch this.\nLink I\u0026rsquo;m an inline-style link\nI\u0026rsquo;m an inline-style link with title\nI\u0026rsquo;m a reference-style link\nI\u0026rsquo;m a relative reference to a repository file\nYou can use numbers for reference-style link definitions\nOr leave it empty and use the link text itself.\nURLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example).\nSome text to show that the reference links can follow later.\nParagraph Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam nihil enim maxime corporis cumque totam aliquid nam sint inventore optio modi neque laborum officiis necessitatibus, facilis placeat pariatur! Voluptatem, sed harum pariatur adipisci voluptates voluptatum cumque, porro sint minima similique magni perferendis fuga! Optio vel ipsum excepturi tempore reiciendis id quidem? Vel in, doloribus debitis nesciunt fugit sequi magnam accusantium modi neque quis, vitae velit, pariatur harum autem a! Velit impedit atque maiores animi possimus asperiores natus repellendus excepturi sint architecto eligendi non, omnis nihil. Facilis, doloremque illum. Fugit optio laborum minus debitis natus illo perspiciatis corporis voluptatum rerum laboriosam.\nList List item List item List item List item List item Unordered List List item List item List item List item List item Code and Syntax Highlighting Inline code has back-ticks around it.\nvar s = \u0026#34;JavaScript syntax highlighting\u0026#34;; alert(s); s = \u0026#34;Python syntax highlighting\u0026#34; print s No language indicated, so no syntax highlighting. But let\u0026#39;s throw in a \u0026lt;b\u0026gt;tag\u0026lt;/b\u0026gt;. Blockquote This is a blockquote example.\nInline HTML You can also use raw HTML in your Markdown, and it\u0026rsquo;ll mostly work pretty well.\nTables Colons can be used to align columns.\nTables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don\u0026rsquo;t need to make the raw Markdown line up prettily. You can also use inline Markdown.\nMarkdown Less Pretty Still renders nicely 1 2 3 Image Youtube video ","permalink":"https://Menglin31.github.io/blog/post-13/","tags":["Photos"],"title":"How To Use Checklists To Improve Your UX"},{"categories":null,"contents":"邏輯表達力 三個理由製造機 注意事項 每個理由要各自獨立 每個理由都要扣題 理由要具體／具象化 ","permalink":"https://Menglin31.github.io/blog/talking/","tags":null,"title":""}]